name: CICD Release

on: workflow_dispatch

jobs:
      
    build:
      runs-on: ubuntu-latest

      steps:
        - name: Check out Git repository
          uses: actions/checkout@v3

        - name: Restore node_modules from cache
          uses: actions/cache@v2
          id: yarn-cache
          env:
            cache-name: cache-node-modules
          with:
            path: node_modules
            key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-${{ env.cache-name }}-
              ${{ runner.os }}-yarn-
              ${{ runner.os }}-

        - name: Install dependencies
          if: steps.yarn-cache.outputs.cache-hit != 'true'
          run: yarn install

        - name: Set up our JDK environment
          uses: actions/setup-java@v1.4.3
          with:
            java-version: 11

        - name: Cache Gradle Dependencies
          uses: actions/cache@v2
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-caches-

        - name: Make Gradlew Executable
          run: cd android && chmod +x ./gradlew
        - name: Generate App APK
          env:
            REACT_APP_SECRETE: ${{ secrets.REACT_APP_SECRETE }}
          run: |
            cd android && ./gradlew assembleRelease --no-daemon

        - name: Sign APK
          id: sign_app
          uses: r0adkll/sign-android-release@v1
          with:
            releaseDirectory: android/app/build/outputs/apk/release
            signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
            alias: ${{ secrets.ANDROID_ALIAS }}
            keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
            keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

        - name: Upload Artifact
          uses: actions/upload-artifact@master
          with:
            name: Signed Release
            path: ${{steps.sign_app.outputs.signedReleaseFile}}

    deploy:
      runs-on: ubuntu-latest

      needs: build

      steps:
      
        - name: Check out Git repository
          uses: actions/checkout@v3
          
        - name: Bump version and push tag
          id: changelog
          uses: TriPSs/conventional-changelog-action@v3
          with:
            git-message: 'chore(release): {version}'
            
        - name: Create Release
          uses: actions/create-release@v1
          if: ${{ steps.changelog.outputs.skipped == 'false' }}
          with:
            tag_name: ${{ steps.changelog.outputs.tag }}
            release_name: ${{ steps.changelog.outputs.tag }}
            body: ${{ steps.changelog.outputs.clean_changelog }}
          
        - name: Download Artifact
          uses: actions/download-artifact@v3
          with:
            name: Signed Release
            
        - name: Upload artifact to Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1
          with:
            appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
            serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
            groups: testers
            releaseNotesFile: CHANGELOG.md
            file: ./app-release-unsigned-signed.apk
