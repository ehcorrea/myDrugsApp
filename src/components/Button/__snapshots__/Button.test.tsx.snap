// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[border large] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 20,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border medium] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 10,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border small] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 8,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border xsmall] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 4,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[children] success render Button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text>
    button label
  </Text>
</View>
`;

exports[`[label] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`should success render Button.Link 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <Text
    color="black"
    props={
      {
        "children": "button label",
        "color": "black",
        "forwardedComponent": {
          "$$typeof": Symbol(react.forward_ref),
          "Paragraph": [Function],
          "Title": [Function],
          "attrs": [
            [Function],
          ],
          "inlineStyle": InlineStyle {
            "rules": [
              "
  text-transform: capitalize;
",
            ],
          },
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "StyledNativeComponent",
          "target": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
        "props": [Circular],
        "theme": {
          "border": {
            "radius": {
              "large": 20,
              "medium": 10,
              "small": 8,
              "xsmall": 4,
            },
          },
          "colors": {
            "black": "#000000",
            "darkGray": "#2E2F42",
            "gray": "#545454",
            "lightBg": "#06092B",
            "lightGray": "#E1E1E1",
            "mainBg": "#EFEFEF",
            "primary": "#F231A5",
            "red": "#A74141",
            "secondary": "#3CD3C1",
            "white": "#FAFAFA",
          },
          "font": {
            "family": {
              "italic": "Poppins-Italic",
              "medium": "Poppins-Medium",
              "mediumItalic": "Poppins-MediumItalic",
              "regular": "Poppins-Regular",
              "semiBold": "Poppins-SemiBold",
              "semiBoldItalic": "Poppins-SemiBoldItalic",
              "title": "PlayfairDisplay-regular",
              "titleItalic": "PlayfairDisplay-Italic",
            },
            "sizes": {
              "huge": 32,
              "large": 20,
              "medium": 16,
              "small": 14,
              "xlarge": 24,
              "xsmall": 12,
              "xxlarge": 28,
            },
            "wight": {
              "bold": 600,
              "light": 300,
              "normal": 400,
              "xbold": 700,
            },
          },
          "spacings": {
            "huge": 44,
            "large": 20,
            "medium": 16,
            "xlarge": 28,
            "xsmall": 14,
            "xxlarge": 32,
            "xxsmall": 8,
          },
        },
      }
    }
    style={
      [
        {
          "color": "#000000",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
        {
          "textTransform": "capitalize",
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;
