// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[border large] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 20,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border medium] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 10,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border small] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 8,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[border xsmall] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "borderRadius": 4,
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`[children] success render Button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text>
    button label
  </Text>
</View>
`;

exports[`[label] success render Button 1`] = `
<View
  accessibilityLabel="button label"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "height": 44,
      "justifyContent": "center",
      "opacity": 1,
      "width": 222,
    }
  }
>
  <Text
    color="white"
    style={
      [
        {
          "color": "#FAFAFA",
          "fontFamily": "Poppins-Regular",
          "fontSize": 31,
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;

exports[`should success render Button.Link 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <Text
    color="red"
    size="small"
    style={
      [
        {
          "color": "#A74141",
          "fontFamily": "Poppins-Regular",
          "fontSize": 27,
        },
        {
          "textTransform": "capitalize",
        },
      ]
    }
  >
    button label
  </Text>
</View>
`;
